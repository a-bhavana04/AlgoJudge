# Production Docker Compose for EC2 Deployment
version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: algojudge
      POSTGRES_USER: algojudge
      POSTGRES_PASSWORD: ${DB_PASSWORD:-algojudge123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - algojudge_network
    restart: unless-stopped

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DATABASE_URL: postgresql://algojudge:${DB_PASSWORD:-algojudge123}@db:5432/algojudge
      OLLAMA_HOST: http://host.docker.internal:11434
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      ENVIRONMENT: production
    depends_on:
      - db
    privileged: true
    networks:
      - algojudge_network
    restart: unless-stopped

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://${EC2_PUBLIC_IP:-localhost}:8000
    depends_on:
      - backend
    networks:
      - algojudge_network
    restart: unless-stopped

  # Nginx reverse proxy (optional but recommended for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - algojudge_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  algojudge_network:
    driver: bridge
